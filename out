In file included from main.cpp:1:
In file included from ./containers.h:9:
./Iterator.hpp:216:50: error: typename specifier refers to non-type member 'is_integer' in 'std::numeric_limits<int>'
        typedef typename std::numeric_limits<T>::is_integer value;
                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~
./Vector.hpp:42:67: note: in instantiation of template class 'ft::is_integral<int>' requested here
        vector(Iter first, Iter last, typename ft::enable_if<!ft::is_integral<Iter>::value, Iter>::type* = NULL, const allocator_type &alloc = allocator_type()):
                                                                  ^
main.cpp:651:21: note: while substituting deduced template arguments into function template 'vector' [with Iter = int]
    ft::vector<int> a(10, 5);
                    ^
/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/limits:458:41: note: referenced member 'is_integer' is declared here
    static _LIBCPP_CONSTEXPR const bool is_integer = __base::is_integer;
                                        ^
In file included from main.cpp:1:
In file included from ./containers.h:9:
./Iterator.hpp:216:50: error: typename specifier refers to non-type member 'is_integer' in 'std::numeric_limits<ft::RandAccessIt<int> >'
        typedef typename std::numeric_limits<T>::is_integer value;
                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~
./Vector.hpp:42:67: note: in instantiation of template class 'ft::is_integral<ft::RandAccessIt<int> >' requested here
        vector(Iter first, Iter last, typename ft::enable_if<!ft::is_integral<Iter>::value, Iter>::type* = NULL, const allocator_type &alloc = allocator_type()):
                                                                  ^
main.cpp:652:21: note: while substituting deduced template arguments into function template 'vector' [with Iter = ft::RandAccessIt<int>]
    ft::vector<int> b(a.begin(), a.end());
                    ^
/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/limits:458:41: note: referenced member 'is_integer' is declared here
    static _LIBCPP_CONSTEXPR const bool is_integer = __base::is_integer;
                                        ^
main.cpp:652:21: error: no matching constructor for initialization of 'ft::vector<int>'
    ft::vector<int> b(a.begin(), a.end());
                    ^ ~~~~~~~~~~~~~~~~~~
./Vector.hpp:27:18: note: candidate constructor not viable: no known conversion from 'ft::vector<int>::iterator' (aka 'RandAccessIt<int>') to 'ft::vector::size_type' (aka 'unsigned long') for 1st argument
        explicit vector(size_type n, const value_type& val = value_type(), const allocator_type& alloc = allocator_type()):
                 ^
./Vector.hpp:42:9: note: candidate template ignored: substitution failure [with Iter = ft::RandAccessIt<int>]
        vector(Iter first, Iter last, typename ft::enable_if<!ft::is_integral<Iter>::value, Iter>::type* = NULL, const allocator_type &alloc = allocator_type()):
        ^
./Vector.hpp:22:18: note: candidate constructor not viable: allows at most single argument 'alloc', but 2 arguments were provided
        explicit vector(const allocator_type& alloc = allocator_type()):
                 ^
./Vector.hpp:34:9: note: candidate constructor not viable: requires single argument 'x', but 2 arguments were provided
        vector(const vector& x):
        ^
3 errors generated.
make: *** [objs/main.o] Error 1
